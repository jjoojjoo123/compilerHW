Nonterminals useless in grammar

   test


Terminals unused in grammar

   MK_DOT
   ERROR


Rules useless in grammar

  114 test: assign_expr


State 213 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | %empty

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | %empty

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | %empty

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON
   30         | ID id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | MK_LPAREN cexpr MK_RPAREN

   47 init_id_list: init_id
   48             | init_id_list MK_COMMA init_id

   49 init_id: ID
   50        | ID dim_decl
   51        | ID OP_ASSIGN relop_expr

   52 stmt_list: stmt_list stmt
   53          | stmt

   54 stmt: MK_LBRACE block MK_RBRACE
   55     | WHILE MK_LPAREN relop_expr MK_RPAREN stmt
   56     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   57     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   58     | IF MK_LPAREN relop_expr MK_RPAREN stmt
   59     | IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt
   60     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   61     | MK_SEMICOLON
   62     | RETURN MK_SEMICOLON
   63     | RETURN relop_expr MK_SEMICOLON

   64 assign_expr_list: nonempty_assign_expr_list
   65                 | %empty

   66 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   67                          | assign_expr

   68 assign_expr: ID OP_ASSIGN relop_expr
   69            | relop_expr

   70 relop_expr: relop_term
   71           | relop_expr OP_OR relop_term

   72 relop_term: relop_factor
   73           | relop_term OP_AND relop_factor

   74 relop_factor: expr
   75             | expr rel_op expr

   76 rel_op: OP_EQ
   77       | OP_GE
   78       | OP_LE
   79       | OP_NE
   80       | OP_GT
   81       | OP_LT

   82 relop_expr_list: nonempty_relop_expr_list
   83                | %empty

   84 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   85                         | relop_expr

   86 expr: expr add_op term
   87     | term

   88 add_op: OP_PLUS
   89       | OP_MINUS

   90 term: term mul_op factor
   91     | factor

   92 mul_op: OP_TIMES
   93       | OP_DIVIDE

   94 factor: MK_LPAREN relop_expr MK_RPAREN
   95       | OP_PLUS MK_LPAREN relop_expr MK_RPAREN
   96       | OP_MINUS MK_LPAREN relop_expr MK_RPAREN
   97       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   98       | CONST
   99       | OP_PLUS CONST
  100       | OP_MINUS CONST
  101       | OP_NOT CONST
  102       | ID MK_LPAREN relop_expr_list MK_RPAREN
  103       | OP_PLUS ID MK_LPAREN relop_expr_list MK_RPAREN
  104       | OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN
  105       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
  106       | var_ref
  107       | OP_PLUS var_ref
  108       | OP_MINUS var_ref
  109       | OP_NOT var_ref

  110 var_ref: ID
  111        | ID dim_list

  112 dim_list: dim_list MK_LB expr MK_RB
  113         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 30 33 34 35 36 49 50 51 60 68 102 103 104 105
    110 111
CONST (259) 45 98 99 100 101
VOID (260) 8 10 28
INT (261) 31
FLOAT (262) 32
IF (263) 58 59
ELSE (264) 59
WHILE (265) 55
FOR (266) 56
TYPEDEF (267) 27 28
OP_ASSIGN (268) 51 57 68
OP_OR (269) 71
OP_AND (270) 73
OP_NOT (271) 97 101 105 109
OP_EQ (272) 76
OP_NE (273) 79
OP_GT (274) 80
OP_LT (275) 81
OP_GE (276) 77
OP_LE (277) 78
OP_PLUS (278) 39 88 95 99 103 107
OP_MINUS (279) 40 89 96 100 104 108
OP_TIMES (280) 42 92
OP_DIVIDE (281) 43 93
MK_LB (282) 15 16 37 38 112 113
MK_RB (283) 15 16 37 38 112 113
MK_LPAREN (284) 7 8 9 10 46 55 56 58 59 60 94 95 96 97 102 103 104
    105
MK_RPAREN (285) 7 8 9 10 46 55 56 58 59 60 94 95 96 97 102 103 104
    105
MK_LBRACE (286) 7 8 9 10 54
MK_RBRACE (287) 7 8 9 10 54
MK_COMMA (288) 11 34 35 48 66 84
MK_SEMICOLON (289) 27 28 29 30 56 57 60 61 62 63
MK_DOT (290)
ERROR (291)
RETURN (292) 62 63


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 54
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29 30, on right: 26
type (52)
    on left: 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 30 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 38 50
cexpr (55)
    on left: 39 40 41, on right: 37 38 39 40 46
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46, on right: 42 43 44
init_id_list (58)
    on left: 47 48, on right: 29 48
init_id (59)
    on left: 49 50 51, on right: 47 48
stmt_list (60)
    on left: 52 53, on right: 19 20 52
stmt (61)
    on left: 54 55 56 57 58 59 60 61 62 63, on right: 52 53 55 56 58
    59
assign_expr_list (62)
    on left: 64 65, on right: 56
nonempty_assign_expr_list (63)
    on left: 66 67, on right: 64 66
assign_expr (64)
    on left: 68 69, on right: 66 67
relop_expr (65)
    on left: 70 71, on right: 51 55 57 58 59 63 68 69 71 84 85 94 95
    96 97
relop_term (66)
    on left: 72 73, on right: 70 71 73
relop_factor (67)
    on left: 74 75, on right: 72 73
rel_op (68)
    on left: 76 77 78 79 80 81, on right: 75
relop_expr_list (69)
    on left: 82 83, on right: 56 60 102 103 104 105
nonempty_relop_expr_list (70)
    on left: 84 85, on right: 82 84
expr (71)
    on left: 86 87, on right: 16 17 74 75 86 112 113
add_op (72)
    on left: 88 89, on right: 86
term (73)
    on left: 90 91, on right: 86 87 90
mul_op (74)
    on left: 92 93, on right: 90
factor (75)
    on left: 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108
    109, on right: 90 91
var_ref (76)
    on left: 110 111, on right: 57 106 107 108 109
dim_list (77)
    on left: 112 113, on right: 111 112


State 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


State 1

   30 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 16


State 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


State 3

   31 type: INT .

    $default  reduce using rule 31 (type)


State 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


State 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


State 6

    0 $accept: program . $end

    $end  shift, and go to state 20


State 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


State 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


State 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


State 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


State 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


State 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


State 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


State 15

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 28


State 16

   30 var_decl: ID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 30


State 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 31


State 18

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 32


State 19

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 33


State 20

    0 $accept: program $end .

    $default  accept


State 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


State 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


State 23

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


State 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27
    MK_LPAREN  shift, and go to state 35

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


State 25

   29 var_decl: type init_id_list . MK_SEMICOLON
   48 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


State 26

   47 init_id_list: init_id .

    $default  reduce using rule 47 (init_id_list)


State 27

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 41
    mcexpr   go to state 42
    cfactor  go to state 43


State 28

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 36 (id_list)


State 29

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 45


State 30

   30 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


State 31

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 46

    param_list  go to state 47
    param       go to state 48
    type        go to state 49


State 32

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 50


State 33

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 51


State 34

   51 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 58
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 35

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 65

    param_list  go to state 66
    param       go to state 48
    type        go to state 49


State 36

   38 dim_decl: dim_decl . MK_LB cexpr MK_RB
   50 init_id: ID dim_decl .

    MK_LB  shift, and go to state 44

    $default  reduce using rule 50 (init_id)


State 37

   48 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 67

    init_id  go to state 68


State 38

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


State 39

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


State 40

   46 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 69
    mcexpr   go to state 42
    cfactor  go to state 43


State 41

   37 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 70
    OP_MINUS  shift, and go to state 71
    MK_RB     shift, and go to state 72


State 42

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 73
    OP_DIVIDE  shift, and go to state 74

    $default  reduce using rule 41 (cexpr)


State 43

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


State 44

   38 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 75
    mcexpr   go to state 42
    cfactor  go to state 43


State 45

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 76


State 46

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 77


State 47

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 78
    MK_COMMA   shift, and go to state 79


State 48

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


State 49

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 80


State 50

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


State 51

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


State 52

  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  110 var_ref: ID .
  111        | ID . dim_list

    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 82

    $default  reduce using rule 110 (var_ref)

    dim_list  go to state 83


State 53

   98 factor: CONST .

    $default  reduce using rule 98 (factor)


State 54

   97 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
  101       | OP_NOT . CONST
  105       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
  109       | OP_NOT . var_ref

    ID         shift, and go to state 84
    CONST      shift, and go to state 85
    MK_LPAREN  shift, and go to state 86

    var_ref  go to state 87


State 55

   95 factor: OP_PLUS . MK_LPAREN relop_expr MK_RPAREN
   99       | OP_PLUS . CONST
  103       | OP_PLUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  107       | OP_PLUS . var_ref

    ID         shift, and go to state 88
    CONST      shift, and go to state 89
    MK_LPAREN  shift, and go to state 90

    var_ref  go to state 91


State 56

   96 factor: OP_MINUS . MK_LPAREN relop_expr MK_RPAREN
  100       | OP_MINUS . CONST
  104       | OP_MINUS . ID MK_LPAREN relop_expr_list MK_RPAREN
  108       | OP_MINUS . var_ref

    ID         shift, and go to state 92
    CONST      shift, and go to state 93
    MK_LPAREN  shift, and go to state 94

    var_ref  go to state 95


State 57

   94 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 96
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 58

   51 init_id: ID OP_ASSIGN relop_expr .
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 97

    $default  reduce using rule 51 (init_id)


State 59

   70 relop_expr: relop_term .
   73 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 98

    $default  reduce using rule 70 (relop_expr)


State 60

   72 relop_term: relop_factor .

    $default  reduce using rule 72 (relop_term)


State 61

   74 relop_factor: expr .
   75             | expr . rel_op expr
   86 expr: expr . add_op term

    OP_EQ     shift, and go to state 99
    OP_NE     shift, and go to state 100
    OP_GT     shift, and go to state 101
    OP_LT     shift, and go to state 102
    OP_GE     shift, and go to state 103
    OP_LE     shift, and go to state 104
    OP_PLUS   shift, and go to state 105
    OP_MINUS  shift, and go to state 106

    $default  reduce using rule 74 (relop_factor)

    rel_op  go to state 107
    add_op  go to state 108


State 62

   87 expr: term .
   90 term: term . mul_op factor

    OP_TIMES   shift, and go to state 109
    OP_DIVIDE  shift, and go to state 110

    $default  reduce using rule 87 (expr)

    mul_op  go to state 111


State 63

   91 term: factor .

    $default  reduce using rule 91 (term)


State 64

  106 factor: var_ref .

    $default  reduce using rule 106 (factor)


State 65

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 112


State 66

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 113
    MK_COMMA   shift, and go to state 79


State 67

   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


State 68

   48 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 48 (init_id_list)


State 69

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   46 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 70
    OP_MINUS   shift, and go to state 71
    MK_RPAREN  shift, and go to state 114


State 70

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 115
    cfactor  go to state 43


State 71

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 116
    cfactor  go to state 43


State 72

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


State 73

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 117


State 74

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 118


State 75

   38 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 70
    OP_MINUS  shift, and go to state 71
    MK_RB     shift, and go to state 119


State 76

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 35 (id_list)


State 77

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block      go to state 127
    decl_list  go to state 128
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 129
    stmt_list  go to state 130
    stmt       go to state 131
    var_ref    go to state 132


State 78

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 133


State 79

   11 param_list: param_list MK_COMMA . param

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 134
    type   go to state 49


State 80

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 135

    $default  reduce using rule 13 (param)

    dim_fn  go to state 136


State 81

  113 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    expr     go to state 137
    term     go to state 62
    factor   go to state 63
    var_ref  go to state 64


State 82

  102 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 83 (relop_expr_list)

    relop_expr                go to state 138
    relop_term                go to state 59
    relop_factor              go to state 60
    relop_expr_list           go to state 139
    nonempty_relop_expr_list  go to state 140
    expr                      go to state 61
    term                      go to state 62
    factor                    go to state 63
    var_ref                   go to state 64


State 83

  111 var_ref: ID dim_list .
  112 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 141

    $default  reduce using rule 111 (var_ref)


State 84

  105 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
  110 var_ref: ID .
  111        | ID . dim_list

    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 142

    $default  reduce using rule 110 (var_ref)

    dim_list  go to state 83


State 85

  101 factor: OP_NOT CONST .

    $default  reduce using rule 101 (factor)


State 86

   97 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 143
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 87

  109 factor: OP_NOT var_ref .

    $default  reduce using rule 109 (factor)


State 88

  103 factor: OP_PLUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  110 var_ref: ID .
  111        | ID . dim_list

    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 144

    $default  reduce using rule 110 (var_ref)

    dim_list  go to state 83


State 89

   99 factor: OP_PLUS CONST .

    $default  reduce using rule 99 (factor)


State 90

   95 factor: OP_PLUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 145
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 91

  107 factor: OP_PLUS var_ref .

    $default  reduce using rule 107 (factor)


State 92

  104 factor: OP_MINUS ID . MK_LPAREN relop_expr_list MK_RPAREN
  110 var_ref: ID .
  111        | ID . dim_list

    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 146

    $default  reduce using rule 110 (var_ref)

    dim_list  go to state 83


State 93

  100 factor: OP_MINUS CONST .

    $default  reduce using rule 100 (factor)


State 94

   96 factor: OP_MINUS MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 147
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 95

  108 factor: OP_MINUS var_ref .

    $default  reduce using rule 108 (factor)


State 96

   71 relop_expr: relop_expr . OP_OR relop_term
   94 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 97
    MK_RPAREN  shift, and go to state 148


State 97

   71 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_term    go to state 149
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 98

   73 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_factor  go to state 150
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 99

   76 rel_op: OP_EQ .

    $default  reduce using rule 76 (rel_op)


State 100

   79 rel_op: OP_NE .

    $default  reduce using rule 79 (rel_op)


State 101

   80 rel_op: OP_GT .

    $default  reduce using rule 80 (rel_op)


State 102

   81 rel_op: OP_LT .

    $default  reduce using rule 81 (rel_op)


State 103

   77 rel_op: OP_GE .

    $default  reduce using rule 77 (rel_op)


State 104

   78 rel_op: OP_LE .

    $default  reduce using rule 78 (rel_op)


State 105

   88 add_op: OP_PLUS .

    $default  reduce using rule 88 (add_op)


State 106

   89 add_op: OP_MINUS .

    $default  reduce using rule 89 (add_op)


State 107

   75 relop_factor: expr rel_op . expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    expr     go to state 151
    term     go to state 62
    factor   go to state 63
    var_ref  go to state 64


State 108

   86 expr: expr add_op . term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    term     go to state 152
    factor   go to state 63
    var_ref  go to state 64


State 109

   92 mul_op: OP_TIMES .

    $default  reduce using rule 92 (mul_op)


State 110

   93 mul_op: OP_DIVIDE .

    $default  reduce using rule 93 (mul_op)


State 111

   90 term: term mul_op . factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    factor   go to state 153
    var_ref  go to state 64


State 112

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block      go to state 154
    decl_list  go to state 128
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 129
    stmt_list  go to state 130
    stmt       go to state 131
    var_ref    go to state 132


State 113

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 155


State 114

   46 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 46 (cfactor)


State 115

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 73
    OP_DIVIDE  shift, and go to state 74

    $default  reduce using rule 39 (cexpr)


State 116

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 73
    OP_DIVIDE  shift, and go to state 74

    $default  reduce using rule 40 (cexpr)


State 117

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


State 118

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


State 119

   38 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


State 120

   30 var_decl: ID . id_list MK_SEMICOLON
   60 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  110 var_ref: ID .
  111        | ID . dim_list

    ID         shift, and go to state 15
    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 156

    $default  reduce using rule 110 (var_ref)

    id_list   go to state 16
    dim_list  go to state 83


State 121

   58 stmt: IF . MK_LPAREN relop_expr MK_RPAREN stmt
   59     | IF . MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 157


State 122

   55 stmt: WHILE . MK_LPAREN relop_expr MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 158


State 123

   56 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 159


State 124

   54 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block      go to state 160
    decl_list  go to state 128
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 129
    stmt_list  go to state 130
    stmt       go to state 131
    var_ref    go to state 132


State 125

   61 stmt: MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


State 126

   62 stmt: RETURN . MK_SEMICOLON
   63     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 52
    CONST         shift, and go to state 53
    OP_NOT        shift, and go to state 54
    OP_PLUS       shift, and go to state 55
    OP_MINUS      shift, and go to state 56
    MK_LPAREN     shift, and go to state 57
    MK_SEMICOLON  shift, and go to state 161

    relop_expr    go to state 162
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 127

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 163


State 128

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 21 (block)

    decl       go to state 23
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 129
    stmt_list  go to state 164
    stmt       go to state 131
    var_ref    go to state 132


State 129

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 67

    init_id_list  go to state 25
    init_id       go to state 26


State 130

   20 block: stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 165
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 20 (block)

    stmt     go to state 166
    var_ref  go to state 132


State 131

   53 stmt_list: stmt .

    $default  reduce using rule 53 (stmt_list)


State 132

   57 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 167


State 133

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block      go to state 168
    decl_list  go to state 128
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 129
    stmt_list  go to state 130
    stmt       go to state 131
    var_ref    go to state 132


State 134

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


State 135

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 169
    expr       go to state 170
    term       go to state 62
    factor     go to state 63
    var_ref    go to state 64


State 136

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 171

    $default  reduce using rule 14 (param)


State 137

   86 expr: expr . add_op term
  113 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 105
    OP_MINUS  shift, and go to state 106
    MK_RB     shift, and go to state 172

    add_op  go to state 108


State 138

   71 relop_expr: relop_expr . OP_OR relop_term
   85 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 97

    $default  reduce using rule 85 (nonempty_relop_expr_list)


State 139

  102 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 173


State 140

   82 relop_expr_list: nonempty_relop_expr_list .
   84 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 174

    $default  reduce using rule 82 (relop_expr_list)


State 141

  112 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    expr     go to state 175
    term     go to state 62
    factor   go to state 63
    var_ref  go to state 64


State 142

  105 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 83 (relop_expr_list)

    relop_expr                go to state 138
    relop_term                go to state 59
    relop_factor              go to state 60
    relop_expr_list           go to state 176
    nonempty_relop_expr_list  go to state 140
    expr                      go to state 61
    term                      go to state 62
    factor                    go to state 63
    var_ref                   go to state 64


State 143

   71 relop_expr: relop_expr . OP_OR relop_term
   97 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 97
    MK_RPAREN  shift, and go to state 177


State 144

  103 factor: OP_PLUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 83 (relop_expr_list)

    relop_expr                go to state 138
    relop_term                go to state 59
    relop_factor              go to state 60
    relop_expr_list           go to state 178
    nonempty_relop_expr_list  go to state 140
    expr                      go to state 61
    term                      go to state 62
    factor                    go to state 63
    var_ref                   go to state 64


State 145

   71 relop_expr: relop_expr . OP_OR relop_term
   95 factor: OP_PLUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 97
    MK_RPAREN  shift, and go to state 179


State 146

  104 factor: OP_MINUS ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 83 (relop_expr_list)

    relop_expr                go to state 138
    relop_term                go to state 59
    relop_factor              go to state 60
    relop_expr_list           go to state 180
    nonempty_relop_expr_list  go to state 140
    expr                      go to state 61
    term                      go to state 62
    factor                    go to state 63
    var_ref                   go to state 64


State 147

   71 relop_expr: relop_expr . OP_OR relop_term
   96 factor: OP_MINUS MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 97
    MK_RPAREN  shift, and go to state 181


State 148

   94 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 94 (factor)


State 149

   71 relop_expr: relop_expr OP_OR relop_term .
   73 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 98

    $default  reduce using rule 71 (relop_expr)


State 150

   73 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 73 (relop_term)


State 151

   75 relop_factor: expr rel_op expr .
   86 expr: expr . add_op term

    OP_PLUS   shift, and go to state 105
    OP_MINUS  shift, and go to state 106

    $default  reduce using rule 75 (relop_factor)

    add_op  go to state 108


State 152

   86 expr: expr add_op term .
   90 term: term . mul_op factor

    OP_TIMES   shift, and go to state 109
    OP_DIVIDE  shift, and go to state 110

    $default  reduce using rule 86 (expr)

    mul_op  go to state 111


State 153

   90 term: term mul_op factor .

    $default  reduce using rule 90 (term)


State 154

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 182


State 155

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 120
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 22 (block)

    block      go to state 183
    decl_list  go to state 128
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 129
    stmt_list  go to state 130
    stmt       go to state 131
    var_ref    go to state 132


State 156

   60 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 83 (relop_expr_list)

    relop_expr                go to state 138
    relop_term                go to state 59
    relop_factor              go to state 60
    relop_expr_list           go to state 184
    nonempty_relop_expr_list  go to state 140
    expr                      go to state 61
    term                      go to state 62
    factor                    go to state 63
    var_ref                   go to state 64


State 157

   58 stmt: IF MK_LPAREN . relop_expr MK_RPAREN stmt
   59     | IF MK_LPAREN . relop_expr MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 185
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 158

   55 stmt: WHILE MK_LPAREN . relop_expr MK_RPAREN stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 186
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 159

   56 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 187
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 65 (assign_expr_list)

    assign_expr_list           go to state 188
    nonempty_assign_expr_list  go to state 189
    assign_expr                go to state 190
    relop_expr                 go to state 191
    relop_term                 go to state 59
    relop_factor               go to state 60
    expr                       go to state 61
    term                       go to state 62
    factor                     go to state 63
    var_ref                    go to state 64


State 160

   54 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 192


State 161

   62 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


State 162

   63 stmt: RETURN relop_expr . MK_SEMICOLON
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 97
    MK_SEMICOLON  shift, and go to state 193


State 163

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


State 164

   19 block: decl_list stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 165
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    $default  reduce using rule 19 (block)

    stmt     go to state 166
    var_ref  go to state 132


State 165

   60 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  110 var_ref: ID .
  111        | ID . dim_list

    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 156

    $default  reduce using rule 110 (var_ref)

    dim_list  go to state 83


State 166

   52 stmt_list: stmt_list stmt .

    $default  reduce using rule 52 (stmt_list)


State 167

   57 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 194
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 168

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 195


State 169

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 196


State 170

   17 expr_null: expr .
   86 expr: expr . add_op term

    OP_PLUS   shift, and go to state 105
    OP_MINUS  shift, and go to state 106

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 108


State 171

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    expr     go to state 197
    term     go to state 62
    factor   go to state 63
    var_ref  go to state 64


State 172

  113 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 113 (dim_list)


State 173

  102 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 102 (factor)


State 174

   84 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 198
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 175

   86 expr: expr . add_op term
  112 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 105
    OP_MINUS  shift, and go to state 106
    MK_RB     shift, and go to state 199

    add_op  go to state 108


State 176

  105 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 200


State 177

   97 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 97 (factor)


State 178

  103 factor: OP_PLUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 201


State 179

   95 factor: OP_PLUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 95 (factor)


State 180

  104 factor: OP_MINUS ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 202


State 181

   96 factor: OP_MINUS MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


State 182

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


State 183

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 203


State 184

   60 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 204


State 185

   58 stmt: IF MK_LPAREN relop_expr . MK_RPAREN stmt
   59     | IF MK_LPAREN relop_expr . MK_RPAREN stmt ELSE stmt
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR      shift, and go to state 97
    MK_RPAREN  shift, and go to state 205


State 186

   55 stmt: WHILE MK_LPAREN relop_expr . MK_RPAREN stmt
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR      shift, and go to state 97
    MK_RPAREN  shift, and go to state 206


State 187

   68 assign_expr: ID . OP_ASSIGN relop_expr
  102 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  110 var_ref: ID .
  111        | ID . dim_list

    OP_ASSIGN  shift, and go to state 207
    MK_LB      shift, and go to state 81
    MK_LPAREN  shift, and go to state 82

    $default  reduce using rule 110 (var_ref)

    dim_list  go to state 83


State 188

   56 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 208


State 189

   64 assign_expr_list: nonempty_assign_expr_list .
   66 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 209

    $default  reduce using rule 64 (assign_expr_list)


State 190

   67 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 67 (nonempty_assign_expr_list)


State 191

   69 assign_expr: relop_expr .
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 97

    $default  reduce using rule 69 (assign_expr)


State 192

   54 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 54 (stmt)


State 193

   63 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


State 194

   57 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 97
    MK_SEMICOLON  shift, and go to state 210


State 195

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


State 196

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


State 197

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   86 expr: expr . add_op term

    OP_PLUS   shift, and go to state 105
    OP_MINUS  shift, and go to state 106
    MK_RB     shift, and go to state 211

    add_op  go to state 108


State 198

   71 relop_expr: relop_expr . OP_OR relop_term
   84 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 97

    $default  reduce using rule 84 (nonempty_relop_expr_list)


State 199

  112 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 112 (dim_list)


State 200

  105 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 105 (factor)


State 201

  103 factor: OP_PLUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 103 (factor)


State 202

  104 factor: OP_MINUS ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 104 (factor)


State 203

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


State 204

   60 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 212


State 205

   58 stmt: IF MK_LPAREN relop_expr MK_RPAREN . stmt
   59     | IF MK_LPAREN relop_expr MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 165
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt     go to state 213
    var_ref  go to state 132


State 206

   55 stmt: WHILE MK_LPAREN relop_expr MK_RPAREN . stmt

    ID            shift, and go to state 165
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt     go to state 214
    var_ref  go to state 132


State 207

   68 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    relop_expr    go to state 215
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 208

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 83 (relop_expr_list)

    relop_expr                go to state 138
    relop_term                go to state 59
    relop_factor              go to state 60
    relop_expr_list           go to state 216
    nonempty_relop_expr_list  go to state 140
    expr                      go to state 61
    term                      go to state 62
    factor                    go to state 63
    var_ref                   go to state 64


State 209

   66 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 187
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    assign_expr   go to state 217
    relop_expr    go to state 191
    relop_term    go to state 59
    relop_factor  go to state 60
    expr          go to state 61
    term          go to state 62
    factor        go to state 63
    var_ref       go to state 64


State 210

   57 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 57 (stmt)


State 211

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


State 212

   60 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 60 (stmt)


State 213

   58 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt .
   59     | IF MK_LPAREN relop_expr MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 218

    ELSE      [reduce using rule 58 (stmt)]
    $default  reduce using rule 58 (stmt)


State 214

   55 stmt: WHILE MK_LPAREN relop_expr MK_RPAREN stmt .

    $default  reduce using rule 55 (stmt)


State 215

   68 assign_expr: ID OP_ASSIGN relop_expr .
   71 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 97

    $default  reduce using rule 68 (assign_expr)


State 216

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 219


State 217

   66 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 66 (nonempty_assign_expr_list)


State 218

   59 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 165
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt     go to state 220
    var_ref  go to state 132


State 219

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 187
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    OP_PLUS    shift, and go to state 55
    OP_MINUS   shift, and go to state 56
    MK_LPAREN  shift, and go to state 57

    $default  reduce using rule 65 (assign_expr_list)

    assign_expr_list           go to state 221
    nonempty_assign_expr_list  go to state 189
    assign_expr                go to state 190
    relop_expr                 go to state 191
    relop_term                 go to state 59
    relop_factor               go to state 60
    expr                       go to state 61
    term                       go to state 62
    factor                     go to state 63
    var_ref                    go to state 64


State 220

   59 stmt: IF MK_LPAREN relop_expr MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 59 (stmt)


State 221

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 222


State 222

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 165
    IF            shift, and go to state 121
    WHILE         shift, and go to state 122
    FOR           shift, and go to state 123
    MK_LBRACE     shift, and go to state 124
    MK_SEMICOLON  shift, and go to state 125
    RETURN        shift, and go to state 126

    stmt     go to state 223
    var_ref  go to state 132


State 223

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 56 (stmt)
